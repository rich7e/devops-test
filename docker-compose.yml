
networks:
  frontend-net:
  app-net:
  db-net:

volumes:
  db-data:
  certs-le:

services:
  db:
    image: postgres:16
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-appdb}
      POSTGRES_USER: ${POSTGRES_USER:-appuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-apppass}
    command: ["postgres","-c","config_file=/etc/postgresql/postgres.conf"]
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./db/postgres.conf:/etc/postgresql/postgres.conf:ro
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks: [db-net]
    healthcheck:
      test: ["CMD-SHELL","pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 3s
      retries: 5

  app1:
    build: ./app
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-appdb}
      POSTGRES_USER: ${POSTGRES_USER:-appuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-apppass}
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
    depends_on:
      db:
        condition: service_healthy
    expose: ["8443"]
    volumes:
      - ./certs/app:/etc/app-tls:ro
    networks: [app-net, db-net]

  app2:
    build: ./app
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-appdb}
      POSTGRES_USER: ${POSTGRES_USER:-appuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-apppass}
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
    depends_on:
      db:
        condition: service_healthy
    expose: ["8443"]
    volumes:
      - ./certs/app:/etc/app-tls:ro
    networks: [app-net, db-net]

  balancer:
    build: ./balancer
    ports: ["80:80", "443:443"]
    depends_on: [app1, app2]
    volumes:
      - ./certs-le:/etc/letsencrypt:ro
      - ./certs/balancer:/etc/nginx/mtls:ro
    environment:
      - DOMAIN=example.local
    networks: [frontend-net, app-net]
  
#  certbot:
#    image: certbot/dns-cloudflare:latest
#    environment:
#      - CF_API_TOKEN=${CF_API_TOKEN}
#      - DOMAIN=example.local
#    volumes:
#      - ./certs-le:/etc/letsencrypt
#      - ./certbot:/scripts
#    entrypoint: ["/bin/sh", "/scripts/renew.sh"]
#    networks: [frontend-net]

  renewal:
    image: certbot/dns-cloudflare:latest
    container_name: certbot-renewal
    environment:
      - CF_API_TOKEN=${CF_API_TOKEN}
    volumes:
      - certs-le:/etc/letsencrypt
      - ./certs/cloudflare.ini:/cloudflare.ini:ro
    entrypoint: >
      sh -c '
        while true; do
          certbot renew \
            --dns-cloudflare \
            --dns-cloudflare-credentials /cloudflare.ini \
            --quiet --no-self-upgrade;
          echo "[renewal] reload nginx at $(date)";
          nginx -s reload 2>/dev/null || true;
          sleep 60d;
        done
      '
    depends_on:
      - balancer
    restart: always

